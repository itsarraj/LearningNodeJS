// <------------------------------------------------>
//  <----[ NodeJs : Writing Our First Server ]---->
// <------------------------------------------------>


// <----[ 1.WritingFirstNodeJSserver ]---->

const http = require("http");
const port = 8000;

function requestHandler(req, res) {
    console.log(req.url);
    res.end("Gotcha!");
}

const server = http.createServer(requestHandler);

server.listen(port, function (err) {
    if (err) {
        console.log(err);
        return;
    }
    console.log("Server is up and running at Port:  ", port);
});


// <----[ 2.RenderingHtmlFileUsingNodeJs ]---->

const http = require('http');
const port = 8000;
const fs = require('fs');

function requestHandler(req, res) {
    console.log(req.url);
    res.writeHead(200, { 'content-type': 'text/html' });

    fs.readFile('./index.html', function (err, data) {
        if (err) {
            console.log('error : ', err);
            return res.end('<h1>Error</h1>');
        }
        return res.end(data);
    });
}

const server = http.createServer(requestHandler);

server.listen(port, function (err) {
    if (err) {
        console.log(err);
        return;
    }
    console.log('Server is up and running at Port:  ', port);
});


// <----[ 3.RenderingMultipleHtmlFileUsingNodeJs ]---->

const http = require('http');
const port = 8000;
const fs = require('fs');

function requestHandler(req, res) {
    console.log(req.url);
    res.writeHead(200, { 'content-type': 'text/html' });

    let filePath;

    switch (req.url) {
        case '/':
            filePath = './index.html';
            break;
        case '/profile':
            filePath = './profile.html';
            break;
        default:
            filePath = './404.html';
    }

    fs.readFile(filePath, function (err, data) {
        if (err) {
            console.log('error : ', err);
            return res.end('<h1>Error</h1>');
        }
        return res.end(data);
    });
}

const server = http.createServer(requestHandler);

server.listen(port, function (err) {
    if (err) {
        console.log(err);
        return;
    }
    console.log('Server is up and running at Port:  ', port);
});


// <------------------------------------------------>
//  <----[ NodeJs : My First Express App ]---->
// <------------------------------------------------>

// <----[ 4.My First Express App Render HTML Using Express]---->

const express = require('express');
const port = 8000;
const app = express();

app.get('/', function (req, res) {
    res.send('<h1>Welcome</h1>');
});

app.listen(port, function (err) {
    if (err) {
        console.log('Error in  running the server', err);
    }
    console.log('server listening on port', port);
});

// <----[ 5.ExpressJS:Template Engine Setup]---->
const express = require('express');
const path = require('path');
const port = 8000;
const app = express();

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

app.get('/', function (req, res) {
    res.render('home');
});

app.listen(port, function (err) {
    if (err) {
        console.log('Error in  running the server', err);
    }
    console.log('server listening on port', port);
});



// <----[ 6.LearningEJS ]---->
const express = require('express');
const path = require('path');
const port = 8000;
const app = express();

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views'));

app.get('/', function (req, res) {
    res.render('home', { title: 'Title That is Rendered Using EJS ' });
});

app.get('/practice', function (req, res) {
    res.render('practice', { title: 'Let us play with ejs' });
});

app.listen(port, function (err) {
    if (err) {
        console.log('Error in  running the server', err);
    }
    console.log('server listening on port', port);
});



// <----[ 7.ContactList_v1 ]---->

const express = require('express');
const path = require('path');
const port = 8000;
const app = express();

app.set('view engine', 'ejs');
app.set('views', path.join(__dirname, 'views')); // This is setup to look for views in the views folder
app.use(express.urlencoded());
var contactList = [
    {
        name: 'A',
        phone: '1',
    },
    {
        name: 'B',
        phone: '2',
    },
    {
        name: 'C',
        phone: '3',
    },
];

app.get('/', function (req, res) {
    return res.render('contact', {
        title: 'Contact_List',
        contact_list: contactList,
    });
});

app.get('/practice', function (req, res) {
    return res.render('practice', { title: 'Let us play with ejs' });
});

app.post('/create-contact', function (req, res) {
    // contactList.push({
    //     name: req.body.name,
    //     phone: req.body.phone,
    // });

    contactList.push(req.body);

    return res.redirect('/');
    // we can use back for longer urls
    // return res.redirect('back');
});

app.listen(port, function (err) {
    if (err) {
        console.log('Error in  running the server', err);
    }
    console.log('server listening on port', port);
});
